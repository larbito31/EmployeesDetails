<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>